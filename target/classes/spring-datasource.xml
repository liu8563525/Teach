<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 设置jdbc与freeMarker的配置文件路径 --><!-- class="org.springframework.beans.factory.config.PropertiesFactoryBean" -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
            	<value>classpath:jdbc.properties</value>
                <!-- <value>classpath*:jdbc.properties</value> -->
                <value>classpath:freemarker.properties</value>
                <!-- <value>classpath:messages.properties</value> -->
            </list>
        </property>
    </bean>

	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	  <property name="driverClassName"><value>${mysql.driverClassName}</value></property>
	  <property name="url"><value>${mysql.url}</value></property>
	  <property name="username"><value>${mysql.username}</value></property>
	  <property name="password" value="${mysql.password}"></property>
	  <property name="initialSize" value="${mysql.initialSize}"></property>
	  <property name="maxActive"><value>${mysql.maxActive}</value></property>
      <property name="maxIdle"><value>${mysql.maxIdle}</value></property>
      <property name="minIdle"><value>${mysql.minIdle}</value></property>
      <property name="maxWait" value="${mysql.maxWait}"></property>
	</bean>
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	  <property name="driverClassName" ><value>${oracle.driverClassName}</value> </property>
	  <property name="url"><value>${oracle.url}</value></property>
	  <property name="username"><value>${oracle.username}</value></property>
	  <property name="password"><value>${oracle.password}</value></property>
	</bean> -->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="sessionFactory"
	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="configLocation" value="classpath:hibernate.cfg.xml">
	</property>
	<property name="dataSource">
			<ref bean="dataSource" />
	</property>
	</bean>
	<bean id="hibernateTemplate"
	class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	  <property name="configLocation" value="classpath:SqlMapConfig.xml" />
      <property name="dataSource" ref="dataSource" />
      <property name="lobHandler" ref="oracleLobHandler"/> 如果需要读写Lob字段，需要注入在SpringFramework配置文件中配置好的Handler，这里是Oracle的数据库
  	</bean>
  	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
      <property name="sqlMapClient" ref="sqlMapClient" />
  	</bean> -->
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configurationProperties">
        <props>
            <prop key="dialect">mysql</prop>
        </props>
    	</property>
        <property name="configLocation" value="classpath:myBatis.xml"/>
    </bean>
    <!-- 配置sqlSessionTemplate -->
    <!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean> -->
	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper ，配置如下：-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- <property name="annotationClass" value="org.springframework.stereotype.Repository"/>  -->
		<property name="basePackage" value="edu.gduf.liu.mapper" />
		<!-- <property name="basePackage"><value>${mapper.package}</value></property> -->
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"/> -->
	</bean>

    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>